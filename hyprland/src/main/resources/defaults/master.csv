category,displayName,settingsName,description,type,value,actionLink,tab,method,validate,special
master,Allow Small Split,allow_small_split,Enable adding additional master windows in a horizontal split style,bool,false,MASTER_LAYOUT,master,INPUT_TOGGLE
master,Special Scale Factor,special_scale_factor,The scale of the special workspace windows; [0.0 - 1.0],float,1,MASTER_LAYOUT,master,INPUT_RANGE,"0,1"
master,Mfact,mfact,The size as a percentage of the master window; for example mfact = 0.70 would mean 70% of the screen will be the master window; and 30% the slave [0.0 - 1.0],float,0.55,MASTER_LAYOUT,master,INPUT_FLOAT
master,New Status,new_status,master: new window becomes master; slave: new windows are added to slave stack; inherit: inherit from focused window,string,slave,MASTER_LAYOUT,master,INPUT_STR
master,New On Top,new_on_top,Whether a newly open window should be on the top of the stack,bool,false,MASTER_LAYOUT,master,INPUT_TOGGLE
master,New On Active,new_on_active,before; after: place new window relative to the focused window; none: place new window according to the value of new_on_top,string,none,MASTER_LAYOUT,master,INPUT_STR
master,Orientation,orientation,Default placement of the master area; can be left; right; top; bottom or center,string,left,MASTER_LAYOUT,master,INPUT_STR
master,Inherit Fullscreen,inherit_fullscreen,Inherit fullscreen status when cycling/swapping to another window (e.g. monocle layout),bool,true,MASTER_LAYOUT,master,INPUT_TOGGLE
master,Slave Count for Center Master,slave_count_for_center_master,When using orientation=center; make the master window centered only when at least this many slave windows are open; (Set 0 to always_center_master),int,2,MASTER_LAYOUT,master,INPUT_INT
master,Center Master Fallback,center_master_fallback,Set fallback for center master when slaves are less than slave_count_for_center_master; can be left; right; top; bottom,string,left,MASTER_LAYOUT,master,INPUT_STR
master,Smart Resizing,smart_resizing,If enabled; resizing direction will be determined by the mouse’s position on the window (nearest to which corner); Else; it is based on the window’s tiling position,bool,true,MASTER_LAYOUT,master,INPUT_TOGGLE
master,Drop at Cursor,drop_at_cursor,When enabled; dragging and dropping windows will put them at the cursor position; otherwise; when dropped at the stack side; they will go to the top/bottom of the stack depending on new_on_top,bool,true,MASTER_LAYOUT,master,INPUT_TOGGLE
master,Always Keep Position,always_keep_position,Whether to keep the master window in its configured position when there are no slave windows,bool,false,MASTER_LAYOUT,master,INPUT_TOGGLE
